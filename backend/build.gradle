plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.financeMonkey'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Core
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	
	// PostgreSQL
	implementation 'org.postgresql:postgresql'
	
	// Flyway for database migrations
	implementation 'org.flywaydb:flyway-core'
	
	// JWT Authentication
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	
	// Google API Client for Gemini AI and OAuth
	implementation 'com.google.api-client:google-api-client:2.2.0'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
	implementation 'com.google.apis:google-api-services-gmail:v1-rev20220404-2.0.0'
	
	// Google Generative AI (Gemini)
	implementation 'com.google.cloud:google-cloud-aiplatform:3.22.0'
	implementation 'com.google.cloud:google-cloud-core:2.20.0'
	implementation 'com.google.generativeai:generativeai:0.3.0'
	
	// JSON processing
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
	
	// Swagger/OpenAPI Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	testImplementation 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}
